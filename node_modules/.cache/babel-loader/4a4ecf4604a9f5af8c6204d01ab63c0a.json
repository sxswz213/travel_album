{"remainingRequest":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\thread-loader\\dist\\cjs.js!E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\babel-loader\\lib\\index.js!E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue","mtime":1721984930628},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\babel.config.js","mtime":1721908005329},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1721908832546},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\babel-loader\\lib\\index.js","mtime":1721908838903},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js","mtime":1721908835548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGNoaW5hTWFwIGZyb20gIi4vY29tcG9uZW50cy9jaGluYU1hcC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgY29tcG9uZW50czogewogICAgY2hpbmFNYXAKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAga2V5OiAwLAogICAgICB0ZXN0RGF0YTogW3sKICAgICAgICBuYW1lOiAi5aSp5rSl5biCIiwKICAgICAgICB2YWx1ZTogMSwKICAgICAgICB0YWc6IDAKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLpmZXopb/nnIEiLAogICAgICAgIHZhbHVlOiAxLAogICAgICAgIHRhZzogMAogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuilv+WuieW4giIsCiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgdGFnOiAxCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi5Zub5bed55yBIiwKICAgICAgICB2YWx1ZTogMSwKICAgICAgICB0YWc6IDAKICAgICAgfSwgewogICAgICAgIG5hbWU6ICLmiJDpg73luIIiLAogICAgICAgIHZhbHVlOiAxLAogICAgICAgIHRhZzogMQogICAgICB9LCB7CiAgICAgICAgbmFtZTogIuecieWxseW4giIsCiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgdGFnOiAxCiAgICAgIH1dLAogICAgICBzY2F0dGVyRGF0YTogW10KICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIC8q55So5LqO5p+T6Imy5Zyw5Zu+5Z2XKi8KICAgIHRoaXMuZWNoYXJ0c0RhdGEgPSB0aGlzLnRlc3REYXRhLm1hcCgoewogICAgICBuYW1lLAogICAgICB2YWx1ZSwKICAgICAgdGFnCiAgICB9KSA9PiB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbmFtZTogdGhpcy5nZXRDaXR5TmFtZShuYW1lLCB0YWcpLAogICAgICAgIHZhbHVlCiAgICAgIH07CiAgICB9KTsKICB9LAoKICBtb3VudGVkKCkgewogICAgY29uc3QgYXVkaW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFja2dyb3VuZC1tdXNpYycpOwogICAgYXVkaW8udm9sdW1lID0gMC41OyAvLyDorr7nva7pn7Pph48KCiAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdjYW5wbGF5dGhyb3VnaCcsICgpID0+IHsKICAgICAgY29uc29sZS5sb2coJ0F1ZGlvIGNhbiBwbGF5IHRocm91Z2gnKTsKICAgIH0pOwogICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcigncGxheScsICgpID0+IHsKICAgICAgY29uc29sZS5sb2coJ0F1ZGlvIGlzIHBsYXlpbmcnKTsKICAgIH0pOwogICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlID0+IHsKICAgICAgY29uc29sZS5lcnJvcignQXVkaW8gZXJyb3InLCBlKTsKICAgIH0pOwogICAgdGhpcy5jcmVhdGVNZXRlb3JzKCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgbWFwQ2xpY2soewogICAgICBjb2RlLAogICAgICBuYW1lCiAgICB9KSB7CiAgICAgIGNvbnNvbGUubG9nKGNvZGUsIG5hbWUpOwogICAgfSwKCiAgICAvKioNCiAgICAgKkBkZXNjcmlwdGlvbiDov5nkuKrmlrnms5XnlKjmnaXojrflj5bln47luILnmoTnroDnp7DvvIzkvovlpoIg5YyX5Lqs5biCID0+IOWMl+S6rOOAgiDlhoXokpnlj6Toh6rmsrvljLogPT4g5YaF6JKZ5Y+kDQogICAgKi8KICAgIGdldENpdHlOYW1lKGNpdHlOYW1lLCB0YWcpIHsKICAgICAgaWYgKCFjaXR5TmFtZSkgcmV0dXJuOwoKICAgICAgaWYgKHRhZykgewogICAgICAgIHJldHVybiBjaXR5TmFtZTsKICAgICAgfQoKICAgICAgbGV0IGlzQXV0b25vbXkgPSBjaXR5TmFtZS5zZWFyY2goIuiHquayu+WMuiIpICE9IC0xOwoKICAgICAgaWYgKGlzQXV0b25vbXkpIHsKICAgICAgICByZXR1cm4gY2l0eU5hbWUuc2VhcmNoKCLlhoUiKSAhPSAtMSA/IGNpdHlOYW1lLnN1YnN0cigwLCAzKSA6IGNpdHlOYW1lLnN1YnN0cigwLCAyKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gY2l0eU5hbWUubWF0Y2goLyhcUyopKOecgXzluIJ854m55Yir6KGM5pS/5Yy6KS8pID8gY2l0eU5hbWUubWF0Y2goLyhcUyopKOecgXzluIJ854m55Yir6KGM5pS/5Yy6KS8pWzFdIDogY2l0eU5hbWU7CiAgICAgIH0gLy8gY29uc29sZS5sb2coJ2xpc3QyJywgdGhpcy5saXN0KQoKICAgIH0sCgogICAgY3JlYXRlTWV0ZW9ycygpIHsKICAgICAgY29uc3QgbWV0ZW9yQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21ldGVvcnMnKTsKICAgICAgY29uc3QgbnVtYmVyT2ZNZXRlb3JzID0gMTAwOyAvLyDlop7liqDmtYHmmJ/mlbDph48KCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZNZXRlb3JzOyBpKyspIHsKICAgICAgICBjb25zdCBtZXRlb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICBtZXRlb3IuY2xhc3NMaXN0LmFkZCgnbWV0ZW9yJyk7IC8vIOmaj+acuuS9jee9ruWSjOWKqOeUu+W7tui/nwoKICAgICAgICBjb25zdCBzdGFydFBvcyA9IE1hdGgucmFuZG9tKCkgKiAxMDA7CiAgICAgICAgY29uc3QgZGVsYXkgPSBNYXRoLnJhbmRvbSgpICogNTsKICAgICAgICBjb25zdCBkdXJhdGlvbiA9IE1hdGgucmFuZG9tKCkgKiAzICsgMjsgLy8g6ZqP5py66YCJ5oup5LuO6aG26YOo5oiW5bem5L6n5Ye6546wCgogICAgICAgIGlmIChNYXRoLnJhbmRvbSgpIDwgMC41KSB7CiAgICAgICAgICBtZXRlb3Iuc3R5bGUudG9wID0gJy0nICsgTWF0aC5yYW5kb20oKSAqIDEwICsgJ3ZoJzsKICAgICAgICAgIG1ldGVvci5zdHlsZS5sZWZ0ID0gc3RhcnRQb3MgKyAndncnOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBtZXRlb3Iuc3R5bGUudG9wID0gc3RhcnRQb3MgKyAndmgnOwogICAgICAgICAgbWV0ZW9yLnN0eWxlLmxlZnQgPSAnLScgKyBNYXRoLnJhbmRvbSgpICogMTAgKyAndncnOwogICAgICAgIH0KCiAgICAgICAgbWV0ZW9yLnN0eWxlLmFuaW1hdGlvbkR1cmF0aW9uID0gZHVyYXRpb24gKyAncyc7CiAgICAgICAgbWV0ZW9yLnN0eWxlLmFuaW1hdGlvbkRlbGF5ID0gZGVsYXkgKyAncyc7CiAgICAgICAgbWV0ZW9yQ29udGFpbmVyLmFwcGVuZENoaWxkKG1ldGVvcik7CiAgICAgIH0KICAgIH0KCiAgfQp9Ow=="},{"version":3,"mappings":"AAQA;AAEA;EACAA,WADA;EAEAC;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC,MADA;MAEAC,WACA;QACAL,WADA;QAEAM,QAFA;QAGAC;MAHA,CADA,EAMA;QACAP,WADA;QAEAM,QAFA;QAGAC;MAHA,CANA,EAWA;QACAP,WADA;QAEAM,QAFA;QAGAC;MAHA,CAXA,EAgBA;QACAP,WADA;QAEAM,QAFA;QAGAC;MAHA,CAhBA,EAqBA;QACAP,WADA;QAEAM,QAFA;QAGAC;MAHA,CArBA,EA0BA;QACAP,WADA;QAEAM,QAFA;QAGAC;MAHA,CA1BA,CAFA;MAkCAC;IAlCA;EAoCA,CA1CA;;EA2CAC;IAAA;IACA;MAAAT;MAAAM;MAAAC;IAAA;MACA;QACAP,iCADA;QAEAM;MAFA;IAIA,CALA;EAMA,CAlDA;;EAmDAI;IAEA;IACAC,mBAHA,CAGA;;IACAA;MACAC;IACA,CAFA;IAGAD;MACAC;IACA,CAFA;IAGAD;MACAC;IACA,CAFA;IAGA;EACA,CAjEA;;EAkEAC;IACAC;MAAAC;MAAAf;IAAA;MACAY;IACA,CAHA;;IAIA;AACA;AACA;IACAI;MACA;;MACA;QACA;MACA;;MACA;;MACA;QACA,oCACAC,qBADA,GAEAA,qBAFA;MAGA,CAJA,MAIA;QACA,4CACAA,qCADA,GAEAA,QAFA;MAGA,CAdA,CAeA;;IACA,CAvBA;;IAwBAC;MACA;MACA,4BAFA,CAEA;;MACA;QACA;QACAC,+BAFA,CAIA;;QACA;QACA;QACA,uCAPA,CASA;;QACA;UACAA;UACAA;QACA,CAHA,MAGA;UACAA;UACAA;QACA;;QAEAA;QACAA;QACAC;MAEA;IACA;;EAlDA;AAlEA","names":["name","components","chinaMap","data","key","testData","value","tag","scatterData","created","mounted","audio","console","methods","mapClick","code","getCityName","cityName","createMeteors","meteor","meteorContainer"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <china-map :key=\"key\" cascade :echartsData=\"echartsData\" :scatterData=\"scatterData\" @mapClick=\"mapClick\" />\r\n    <audio id=\"background-music\" :src=\"require('@/assets/music/music.m4a')\" loop autoplay></audio>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport chinaMap from \"./components/chinaMap.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    chinaMap,\r\n  },\r\n  data() {\r\n    return {\r\n      key: 0,\r\n      testData: [\r\n        {\r\n          name: \"天津市\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"陕西省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"西安市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"四川省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"成都市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"眉山市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n      ],\r\n      scatterData: [],\r\n    };\r\n  },\r\n  created() {/*用于染色地图块*/ \r\n    this.echartsData = this.testData.map(({ name, value, tag }) => {\r\n      return {\r\n        name: this.getCityName(name, tag),\r\n        value\r\n      }\r\n    })\r\n  },\r\n  mounted() {\r\n\r\n    const audio = document.getElementById('background-music');\r\n    audio.volume = 0.5; // 设置音量\r\n    audio.addEventListener('canplaythrough', () => {\r\n      console.log('Audio can play through');\r\n    });\r\n    audio.addEventListener('play', () => {\r\n      console.log('Audio is playing');\r\n    });\r\n    audio.addEventListener('error', (e) => {\r\n      console.error('Audio error', e);\r\n    });\r\n    this.createMeteors();\r\n  },\r\n  methods: {\r\n    mapClick({ code, name }) {\r\n      console.log(code, name);\r\n    },\r\n    /**\r\n     *@description 这个方法用来获取城市的简称，例如 北京市 => 北京。 内蒙古自治区 => 内蒙古\r\n    */\r\n    getCityName(cityName, tag) {\r\n      if (!cityName) return;\r\n      if (tag) {\r\n        return cityName;\r\n      }\r\n      let isAutonomy = cityName.search(\"自治区\") != -1;\r\n      if (isAutonomy) {\r\n        return cityName.search(\"内\") != -1\r\n          ? cityName.substr(0, 3)\r\n          : cityName.substr(0, 2);\r\n      } else {\r\n        return cityName.match(/(\\S*)(省|市|特别行政区)/)\r\n          ? cityName.match(/(\\S*)(省|市|特别行政区)/)[1]\r\n          : cityName;\r\n      }\r\n      // console.log('list2', this.list)\r\n    },\r\n    createMeteors() {\r\n      const meteorContainer = document.getElementById('meteors');\r\n      const numberOfMeteors = 100; // 增加流星数量\r\n      for (let i = 0; i < numberOfMeteors; i++) {\r\n        const meteor = document.createElement('div');\r\n        meteor.classList.add('meteor');\r\n\r\n        // 随机位置和动画延迟\r\n        const startPos = Math.random() * 100;\r\n        const delay = Math.random() * 5;\r\n        const duration = Math.random() * 3 + 2;\r\n\r\n        // 随机选择从顶部或左侧出现\r\n        if (Math.random() < 0.5) {\r\n          meteor.style.top = '-' + Math.random() * 10 + 'vh';\r\n          meteor.style.left = startPos + 'vw';\r\n        } else {\r\n          meteor.style.top = startPos + 'vh';\r\n          meteor.style.left = '-' + Math.random() * 10 + 'vw';\r\n        }\r\n\r\n        meteor.style.animationDuration = duration + 's';\r\n        meteor.style.animationDelay = delay + 's';\r\n        meteorContainer.appendChild(meteor);\r\n\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style>\r\n#app {\r\n  background-color: rgba(15, 30, 51, 0);\r\n}\r\n\r\n#meteors {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n  /* background-color: rgba(15, 30, 51, 1); */\r\n  background-image: url('../img/bg/bg.jpeg');\r\n  background-size: cover; /* 确保图片覆盖整个背景 */\r\n  background-position: center; /* 将背景图片居中 */\r\n  background-repeat: no-repeat; /* 禁止背景图片重复 */\r\n}\r\n\r\n.meteor {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 80px;\r\n  background: linear-gradient(45deg, rgb(249, 223, 254), rgba(242, 252, 191, 0.1));\r\n  animation: fall linear infinite;\r\n}\r\n\r\n@keyframes fall {\r\n  from {\r\n    transform: translateY(-100px) translateX(0) rotate(315deg);\r\n  }\r\n\r\n  to {\r\n    transform: translateY(110vh) translateX(100vw) rotate(315deg);\r\n  }\r\n}\r\n</style>\r\n"]}]}