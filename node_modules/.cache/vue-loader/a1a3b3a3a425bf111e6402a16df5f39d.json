{"remainingRequest":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\娱乐\\代码\\地图\\vuechinamap\\src\\components\\chinaMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\src\\components\\chinaMap.vue","mtime":1722133434859},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\babel-loader\\lib\\index.js","mtime":1721908838903},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js","mtime":1721908835548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chinaMap.vue"],"names":[],"mappingsfile":"chinaMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div ref=\"ct\" style=\"width: 100%\" class=\"chinaMapBox\">\r\n    <div ref=\"charts\" :style=\"{ height: chartsHeight }\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nimport mixins from \"./mixins\";\r\nimport { getMap } from \"./maputils\";\r\nexport default {\r\n  mixins: [mixins],\r\n  props: {\r\n    chartsHeight: {\r\n      type: String,\r\n      require: false,\r\n      default: \"800px\",\r\n    },\r\n    echartsData: {\r\n      type: Array,\r\n      require: false,\r\n      default: () => [],\r\n    },\r\n    scatterData: {\r\n      type: Array,\r\n      require: false,\r\n      default: () => [],\r\n    },\r\n    visualColor: {\r\n      type: Array,\r\n      require: false,\r\n      default: () => [ \"rgba(207, 235, 248, 0.8)\", \"rgba(207, 235, 248, 1)\" ],\r\n    },\r\n    zoom: {\r\n      type: Number,\r\n      require: false,\r\n      default: 1,\r\n    },\r\n    visualText: {\r\n      type: Array,\r\n      require: false,\r\n      default: () => [\"高\", \"低\"],\r\n    },\r\n    cityMapName: {\r\n      type: String,\r\n      require: false,\r\n      default: \"中国\",\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      citylist: [{ 中国: \"401200965\" }],\r\n      lastCity: {},\r\n      currentMapName:\"china\"\r\n    };\r\n  },\r\n  methods: {\r\n    initCharts() {\r\n      // if (this.chartsData.length === 0) return;\r\n      this.charts = echarts.init(this.$refs[\"charts\"]);\r\n      const option = {\r\n        // 背景颜色\r\n        // backgroundColor: \"#404a59\",\r\n        // 提示浮窗样式\r\n        tooltip: {\r\n          show: true,\r\n          trigger: \"item\",\r\n          alwaysShowContent: false,\r\n          backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n          padding: [0, 10, 8, 10],\r\n          roam: true,\r\n          hideDelay: 100,\r\n          triggerOn: \"mousemove\",\r\n          enterable: true,\r\n          borderColor: \"rgba(0, 0, 0, 0.7)\",\r\n          //解决浮窗被遮挡\r\n          confine: true,\r\n          textStyle: {\r\n            color: \"#fff\",\r\n            fontSize: \"12\",\r\n            width: 20,\r\n            height: 30,\r\n            overflow: \"break\",\r\n          },\r\n          showDelay: 50,\r\n          formatter: (params) => {\r\n            if (params.data.tag){\r\n              return `<p style=\"text-align:center;line-height: 30px;height:30px;font-size: 14px;border-bottom: 1px solid #7A8698;\">${params.name}</p>\r\n              <div style=\"line-height:22px;margin-top:5px\">旅行次数<span style=\"margin-left:12px;color:#fff;float:right\">${params.data?.tag || \"--\"}</span></div>`;\r\n            }else{\r\n              return `<p style=\"text-align:center;line-height: 30px;height:30px;font-size: 14px;border-bottom: 1px solid #7A8698;\">${params.name}</p>\r\n              <div style=\"line-height:22px;margin-top:5px\">旅行次数<span style=\"margin-left:12px;color:#fff;float:right\">${params.data?.value || \"--\"}</span></div>`;\r\n            }\r\n            },\r\n        },\r\n        // 地图配置文字显示\r\n        geo: {\r\n          map: \"china\",\r\n          // 禁止地图放大缩小\r\n          roam: true,\r\n          zoom: this.zoom,\r\n          label: {\r\n            // 通常状态下的样式\r\n            normal: {\r\n              show: false,\r\n              textStyle: {\r\n                color: \"#ffffff\",\r\n              },\r\n            },\r\n            // 鼠标放上去的样式\r\n            emphasis: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#000064\",\r\n              },\r\n            },\r\n          },\r\n          // 地图区域的样式设置\r\n          itemStyle: {\r\n            normal: {\r\n              borderColor: \"rgba(147, 235, 248, 1)\",\r\n              borderWidth: 1,\r\n              areaColor: {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.8,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(147, 235, 248, 0)\", // 0% 处的颜色\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(147, 235, 248, .2)\", // 100% 处的颜色\r\n                  },\r\n                ],\r\n                globalCoord: false, // 缺省为 false\r\n              },\r\n              shadowColor: \"rgba(128, 217, 248, 1)\",\r\n              shadowOffsetX: -2,\r\n              shadowOffsetY: 2,\r\n              shadowBlur: 10,\r\n            },\r\n            // 鼠标放上去高亮的样式\r\n            emphasis: {\r\n              areaColor: \"rgba(147, 235, 248, 1)\",\r\n              borderWidth: 0,\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"map\",\r\n            roam: true,\r\n            zoom: 1,\r\n            geoIndex: 0,\r\n            label: {\r\n              // 通常状态下的样式\r\n              normal: {\r\n                show: true,\r\n                textStyle: {\r\n                  color: \"#fff\",\r\n                },\r\n              },\r\n              // 鼠标放上去的样式\r\n              emphasis: {\r\n                textStyle: {\r\n                  color: \"#640000\",\r\n                },\r\n              },\r\n            },\r\n\r\n            data: this.echartsData,\r\n          },\r\n          {\r\n            type: \"scatter\",\r\n            coordinateSystem: \"geo\",\r\n            // 定位角标\r\n            symbol: \"pin\",\r\n            legendHoverLink: true,\r\n            symbolSize: [18, 24],\r\n            tooltip: {\r\n              show: true,\r\n\r\n              trigger: \"item\",\r\n              alwaysShowContent: false,\r\n              backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n              padding: [0, 10, 8, 10],\r\n              roam: true,\r\n              hideDelay: 100,\r\n              triggerOn: \"mousemove\",\r\n              enterable: true,\r\n              borderColor: \"rgba(0, 0, 0, 0.7)\",\r\n              // 阴影，值越大阴影亮度越高\r\n              // shadowBlur: 8,\r\n              // shadowColor: \"#00FCFF\",\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontSize: \"12\",\r\n                width: 20,\r\n                height: 30,\r\n                overflow: \"break\",\r\n              },\r\n              showDelay: 100,\r\n            },\r\n            // 这里渲染标志里的内容以及样式\r\n            label: {\r\n              show: true,\r\n              formatter(value) {\r\n                return value.data.value[2];\r\n              },\r\n              color: \"#fff\",\r\n            },\r\n            // 标志的样式\r\n            itemStyle: {\r\n              normal: {\r\n                color: \"rgba(15, 30, 51, 1)\",\r\n              },\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                formatter(value) {\r\n                  return value.data.name;\r\n                },\r\n                color: \"#fff\",\r\n                backgroundColor: \"rgba(108, 5, 243, 0.8)\",\r\n                padding: [10, 20, 10, 20],\r\n                fontSize: \"14\",\r\n                show: false,\r\n                borderRadius: 5,\r\n              },\r\n              emphasis: {\r\n                show: false,\r\n              },\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                color: \"rgba(78, 84, 253, 0.9)\",\r\n                borderColor: \"#fff\",\r\n                borderWidth: 1,\r\n              },\r\n            },\r\n            // 数据格式，其中name,value是必要的，value的前两个值是数据点的经纬度，其他的数据格式可以自定义\r\n            // 至于如何展示，完全是靠上面的formatter来自己定义的\r\n\r\n            data: this.scatterData,\r\n            showEffectOn: \"render\",\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n            },\r\n            hoverAnimation: true,\r\n            zlevel: 1,\r\n          },\r\n        ],\r\n\r\n        visualMap: {\r\n          show: false,\r\n          type: \"continuous\",\r\n          // 这里最大值写死了，请根据实际需求进行变更\r\n          max: 5,\r\n          text: this.visualText,\r\n          calculable: true,\r\n          seriesIndex: [0],\r\n          inRange: {\r\n            // 由低到高\r\n            color: this.visualColor,\r\n          },\r\n\r\n          textStyle: {\r\n            color: \"#fff\",\r\n            map: \"china\",\r\n          },\r\n          bottom: \"8px\",\r\n          right: \"8px\",\r\n          backgroundColor: \"#313E52\",\r\n          padding: [10, 8, 10, 8],\r\n        },\r\n        graphic: {\r\n          type: \"text\",\r\n          x: 25,\r\n          y: 25,\r\n          style: {\r\n            text: \"返回\",\r\n            fill: \"#fff\",\r\n            font: 'bolder 2em \"Microsoft YaHei\", sans-serif'\r\n          },\r\n          onclick: () => {\r\n            // 利用函数的作用域，可以直接拿上面的name来用\r\n            if (this.citylist.length < 2) return;\r\n            this.lastCity = this.citylist[this.citylist.length - 2];\r\n            const name = Object.keys(this.lastCity)[0];\r\n            const [grahpName, graphJson] = getMap(name);\r\n            // 删除最后一个元素\r\n            this.citylist.pop();\r\n            // 很多操作重复了，你可以将公共部分抽离出来\r\n            option.geo.map = grahpName;\r\n            echarts.registerMap(grahpName, graphJson);\r\n            this.charts.setOption(option, true);\r\n          },\r\n        },\r\n      };\r\n\r\n      const [mapName, mapJson] = getMap(this.cityMapName);\r\n      option.geo.map = mapName;\r\n      // 地图注册，第一个参数的名字必须和option.geo.map一致\r\n      echarts.registerMap(mapName, mapJson);\r\n\r\n      this.charts.setOption(option);\r\n\r\n      // this.charts.off();\r\n      this.charts.on(\"click\", (dom) => {\r\n        // 阻止散点图点击事件\r\n        if (dom.seriesType === \"scatter\") return;\r\n        // 暴露点击事件\r\n        const { name: cityname, data } = dom;\r\n        const name = cityname ? cityname : Object.keys(this.lastCity)[0];\r\n        let code = \"\";\r\n        if (dom.componentType === \"series\") {\r\n          code = data?.areaUniCode ? data?.areaUniCode : this.lastCity[name];\r\n        } else {\r\n          code = this.lastCity[name];\r\n        }\r\n        const [mapName, mapJson] = getMap(name);\r\n        // console.log(mapJson);\r\n        if (mapJson) {\r\n          if (dom.componentType === \"series\") {\r\n            this.citylist.push({ [name]: code });\r\n          }\r\n          this.currentMapName = mapName;\r\n          this.mapClick(code, name);\r\n        }\r\n        if (!mapJson) return;\r\n\r\n        option.geo.map = mapName;\r\n        \r\n        // 设置为undefined，可以保证地图切换时总是居中\r\n        option.geo.center = undefined;\r\n        echarts.registerMap(mapName, mapJson);\r\n        this.charts.setOption(option);\r\n      });\r\n\r\n      this.$refs[\"charts\"].oncontextmenu = () => false;\r\n    },\r\n    // 向父组件提供点击事件，并提供点击省份的code和name\r\n    mapClick(code, name) {\r\n      this.$emit(\"mapClick\", { code, name });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\"></style>\r\n"]}]}