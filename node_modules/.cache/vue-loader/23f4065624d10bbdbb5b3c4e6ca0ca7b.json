{"remainingRequest":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue","mtime":1721984930628},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\babel-loader\\lib\\index.js","mtime":1721908838903},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js","mtime":1721908835548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgY2hpbmFNYXAgZnJvbSAiLi9jb21wb25lbnRzL2NoaW5hTWFwLnZ1ZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkFwcCIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBjaGluYU1hcCwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAga2V5OiAwLA0KICAgICAgdGVzdERhdGE6IFsNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLlpKnmtKXluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLpmZXopb/nnIEiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLopb/lronluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLlm5vlt53nnIEiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLmiJDpg73luIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLnnInlsbHluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgICBzY2F0dGVyRGF0YTogW10sDQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsvKueUqOS6juafk+iJsuWcsOWbvuWdlyovIA0KICAgIHRoaXMuZWNoYXJ0c0RhdGEgPSB0aGlzLnRlc3REYXRhLm1hcCgoeyBuYW1lLCB2YWx1ZSwgdGFnIH0pID0+IHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIG5hbWU6IHRoaXMuZ2V0Q2l0eU5hbWUobmFtZSwgdGFnKSwNCiAgICAgICAgdmFsdWUNCiAgICAgIH0NCiAgICB9KQ0KICB9LA0KICBtb3VudGVkKCkgew0KDQogICAgY29uc3QgYXVkaW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFja2dyb3VuZC1tdXNpYycpOw0KICAgIGF1ZGlvLnZvbHVtZSA9IDAuNTsgLy8g6K6+572u6Z+z6YePDQogICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignY2FucGxheXRocm91Z2gnLCAoKSA9PiB7DQogICAgICBjb25zb2xlLmxvZygnQXVkaW8gY2FuIHBsYXkgdGhyb3VnaCcpOw0KICAgIH0pOw0KICAgIGF1ZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ3BsYXknLCAoKSA9PiB7DQogICAgICBjb25zb2xlLmxvZygnQXVkaW8gaXMgcGxheWluZycpOw0KICAgIH0pOw0KICAgIGF1ZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKGUpID0+IHsNCiAgICAgIGNvbnNvbGUuZXJyb3IoJ0F1ZGlvIGVycm9yJywgZSk7DQogICAgfSk7DQogICAgdGhpcy5jcmVhdGVNZXRlb3JzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBtYXBDbGljayh7IGNvZGUsIG5hbWUgfSkgew0KICAgICAgY29uc29sZS5sb2coY29kZSwgbmFtZSk7DQogICAgfSwNCiAgICAvKioNCiAgICAgKkBkZXNjcmlwdGlvbiDov5nkuKrmlrnms5XnlKjmnaXojrflj5bln47luILnmoTnroDnp7DvvIzkvovlpoIg5YyX5Lqs5biCID0+IOWMl+S6rOOAgiDlhoXokpnlj6Toh6rmsrvljLogPT4g5YaF6JKZ5Y+kDQogICAgKi8NCiAgICBnZXRDaXR5TmFtZShjaXR5TmFtZSwgdGFnKSB7DQogICAgICBpZiAoIWNpdHlOYW1lKSByZXR1cm47DQogICAgICBpZiAodGFnKSB7DQogICAgICAgIHJldHVybiBjaXR5TmFtZTsNCiAgICAgIH0NCiAgICAgIGxldCBpc0F1dG9ub215ID0gY2l0eU5hbWUuc2VhcmNoKCLoh6rmsrvljLoiKSAhPSAtMTsNCiAgICAgIGlmIChpc0F1dG9ub215KSB7DQogICAgICAgIHJldHVybiBjaXR5TmFtZS5zZWFyY2goIuWGhSIpICE9IC0xDQogICAgICAgICAgPyBjaXR5TmFtZS5zdWJzdHIoMCwgMykNCiAgICAgICAgICA6IGNpdHlOYW1lLnN1YnN0cigwLCAyKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBjaXR5TmFtZS5tYXRjaCgvKFxTKiko55yBfOW4gnznibnliKvooYzmlL/ljLopLykNCiAgICAgICAgICA/IGNpdHlOYW1lLm1hdGNoKC8oXFMqKSjnnIF85biCfOeJueWIq+ihjOaUv+WMuikvKVsxXQ0KICAgICAgICAgIDogY2l0eU5hbWU7DQogICAgICB9DQogICAgICAvLyBjb25zb2xlLmxvZygnbGlzdDInLCB0aGlzLmxpc3QpDQogICAgfSwNCiAgICBjcmVhdGVNZXRlb3JzKCkgew0KICAgICAgY29uc3QgbWV0ZW9yQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21ldGVvcnMnKTsNCiAgICAgIGNvbnN0IG51bWJlck9mTWV0ZW9ycyA9IDEwMDsgLy8g5aKe5Yqg5rWB5pif5pWw6YePDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mTWV0ZW9yczsgaSsrKSB7DQogICAgICAgIGNvbnN0IG1ldGVvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICBtZXRlb3IuY2xhc3NMaXN0LmFkZCgnbWV0ZW9yJyk7DQoNCiAgICAgICAgLy8g6ZqP5py65L2N572u5ZKM5Yqo55S75bu26L+fDQogICAgICAgIGNvbnN0IHN0YXJ0UG9zID0gTWF0aC5yYW5kb20oKSAqIDEwMDsNCiAgICAgICAgY29uc3QgZGVsYXkgPSBNYXRoLnJhbmRvbSgpICogNTsNCiAgICAgICAgY29uc3QgZHVyYXRpb24gPSBNYXRoLnJhbmRvbSgpICogMyArIDI7DQoNCiAgICAgICAgLy8g6ZqP5py66YCJ5oup5LuO6aG26YOo5oiW5bem5L6n5Ye6546wDQogICAgICAgIGlmIChNYXRoLnJhbmRvbSgpIDwgMC41KSB7DQogICAgICAgICAgbWV0ZW9yLnN0eWxlLnRvcCA9ICctJyArIE1hdGgucmFuZG9tKCkgKiAxMCArICd2aCc7DQogICAgICAgICAgbWV0ZW9yLnN0eWxlLmxlZnQgPSBzdGFydFBvcyArICd2dyc7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgbWV0ZW9yLnN0eWxlLnRvcCA9IHN0YXJ0UG9zICsgJ3ZoJzsNCiAgICAgICAgICBtZXRlb3Iuc3R5bGUubGVmdCA9ICctJyArIE1hdGgucmFuZG9tKCkgKiAxMCArICd2dyc7DQogICAgICAgIH0NCg0KICAgICAgICBtZXRlb3Iuc3R5bGUuYW5pbWF0aW9uRHVyYXRpb24gPSBkdXJhdGlvbiArICdzJzsNCiAgICAgICAgbWV0ZW9yLnN0eWxlLmFuaW1hdGlvbkRlbGF5ID0gZGVsYXkgKyAncyc7DQogICAgICAgIG1ldGVvckNvbnRhaW5lci5hcHBlbmRDaGlsZChtZXRlb3IpOw0KDQogICAgICB9DQogICAgfSwNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <china-map :key=\"key\" cascade :echartsData=\"echartsData\" :scatterData=\"scatterData\" @mapClick=\"mapClick\" />\r\n    <audio id=\"background-music\" :src=\"require('@/assets/music/music.m4a')\" loop autoplay></audio>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport chinaMap from \"./components/chinaMap.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    chinaMap,\r\n  },\r\n  data() {\r\n    return {\r\n      key: 0,\r\n      testData: [\r\n        {\r\n          name: \"天津市\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"陕西省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"西安市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"四川省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"成都市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"眉山市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n      ],\r\n      scatterData: [],\r\n    };\r\n  },\r\n  created() {/*用于染色地图块*/ \r\n    this.echartsData = this.testData.map(({ name, value, tag }) => {\r\n      return {\r\n        name: this.getCityName(name, tag),\r\n        value\r\n      }\r\n    })\r\n  },\r\n  mounted() {\r\n\r\n    const audio = document.getElementById('background-music');\r\n    audio.volume = 0.5; // 设置音量\r\n    audio.addEventListener('canplaythrough', () => {\r\n      console.log('Audio can play through');\r\n    });\r\n    audio.addEventListener('play', () => {\r\n      console.log('Audio is playing');\r\n    });\r\n    audio.addEventListener('error', (e) => {\r\n      console.error('Audio error', e);\r\n    });\r\n    this.createMeteors();\r\n  },\r\n  methods: {\r\n    mapClick({ code, name }) {\r\n      console.log(code, name);\r\n    },\r\n    /**\r\n     *@description 这个方法用来获取城市的简称，例如 北京市 => 北京。 内蒙古自治区 => 内蒙古\r\n    */\r\n    getCityName(cityName, tag) {\r\n      if (!cityName) return;\r\n      if (tag) {\r\n        return cityName;\r\n      }\r\n      let isAutonomy = cityName.search(\"自治区\") != -1;\r\n      if (isAutonomy) {\r\n        return cityName.search(\"内\") != -1\r\n          ? cityName.substr(0, 3)\r\n          : cityName.substr(0, 2);\r\n      } else {\r\n        return cityName.match(/(\\S*)(省|市|特别行政区)/)\r\n          ? cityName.match(/(\\S*)(省|市|特别行政区)/)[1]\r\n          : cityName;\r\n      }\r\n      // console.log('list2', this.list)\r\n    },\r\n    createMeteors() {\r\n      const meteorContainer = document.getElementById('meteors');\r\n      const numberOfMeteors = 100; // 增加流星数量\r\n      for (let i = 0; i < numberOfMeteors; i++) {\r\n        const meteor = document.createElement('div');\r\n        meteor.classList.add('meteor');\r\n\r\n        // 随机位置和动画延迟\r\n        const startPos = Math.random() * 100;\r\n        const delay = Math.random() * 5;\r\n        const duration = Math.random() * 3 + 2;\r\n\r\n        // 随机选择从顶部或左侧出现\r\n        if (Math.random() < 0.5) {\r\n          meteor.style.top = '-' + Math.random() * 10 + 'vh';\r\n          meteor.style.left = startPos + 'vw';\r\n        } else {\r\n          meteor.style.top = startPos + 'vh';\r\n          meteor.style.left = '-' + Math.random() * 10 + 'vw';\r\n        }\r\n\r\n        meteor.style.animationDuration = duration + 's';\r\n        meteor.style.animationDelay = delay + 's';\r\n        meteorContainer.appendChild(meteor);\r\n\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style>\r\n#app {\r\n  background-color: rgba(15, 30, 51, 0);\r\n}\r\n\r\n#meteors {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n  /* background-color: rgba(15, 30, 51, 1); */\r\n  background-image: url('../img/bg/bg.jpeg');\r\n  background-size: cover; /* 确保图片覆盖整个背景 */\r\n  background-position: center; /* 将背景图片居中 */\r\n  background-repeat: no-repeat; /* 禁止背景图片重复 */\r\n}\r\n\r\n.meteor {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 80px;\r\n  background: linear-gradient(45deg, rgb(249, 223, 254), rgba(242, 252, 191, 0.1));\r\n  animation: fall linear infinite;\r\n}\r\n\r\n@keyframes fall {\r\n  from {\r\n    transform: translateY(-100px) translateX(0) rotate(315deg);\r\n  }\r\n\r\n  to {\r\n    transform: translateY(110vh) translateX(100vw) rotate(315deg);\r\n  }\r\n}\r\n</style>\r\n"]}]}