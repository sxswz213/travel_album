{"remainingRequest":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\src\\App.vue","mtime":1721983748868},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\babel-loader\\lib\\index.js","mtime":1721908838903},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1721908837627},{"path":"E:\\娱乐\\代码\\地图\\vuechinamap\\node_modules\\vue-loader\\lib\\index.js","mtime":1721908835548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgY2hpbmFNYXAgZnJvbSAiLi9jb21wb25lbnRzL2NoaW5hTWFwLnZ1ZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkFwcCIsDQogIGNvbXBvbmVudHM6IHsNCiAgICBjaGluYU1hcCwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAga2V5OiAwLA0KICAgICAgdGVzdERhdGE6IFsNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLlpKnmtKXluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLpmZXopb/nnIEiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLopb/lronluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLlm5vlt53nnIEiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMCwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLmiJDpg73luIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICLnnInlsbHluIIiLA0KICAgICAgICAgIHZhbHVlOiAxLA0KICAgICAgICAgIHRhZzogMSwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgICBzY2F0dGVyRGF0YTogW10sDQogICAgfTsNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmVjaGFydHNEYXRhID0gdGhpcy50ZXN0RGF0YS5tYXAoKHsgbmFtZSwgdmFsdWUsIHRhZyB9KSA9PiB7DQogICAgICByZXR1cm4gew0KICAgICAgICBuYW1lOiB0aGlzLmdldENpdHlOYW1lKG5hbWUsIHRhZyksDQogICAgICAgIHZhbHVlDQogICAgICB9DQogICAgfSkNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmNyZWF0ZU1ldGVvcnMoKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG1hcENsaWNrKHsgY29kZSwgbmFtZSB9KSB7DQogICAgICBjb25zb2xlLmxvZyhjb2RlLCBuYW1lKTsNCiAgICB9LA0KICAgIC8qKg0KICAgICAqQGRlc2NyaXB0aW9uIOi/meS4quaWueazleeUqOadpeiOt+WPluWfjuW4gueahOeugOensO+8jOS+i+WmgiDljJfkuqzluIIgPT4g5YyX5Lqs44CCIOWGheiSmeWPpOiHquayu+WMuiA9PiDlhoXokpnlj6QNCiAgICAqLw0KICAgIGdldENpdHlOYW1lKGNpdHlOYW1lLCB0YWcpIHsNCiAgICAgIGlmICghY2l0eU5hbWUpIHJldHVybjsNCiAgICAgIGlmICh0YWcpIHsNCiAgICAgICAgcmV0dXJuIGNpdHlOYW1lOw0KICAgICAgfQ0KICAgICAgbGV0IGlzQXV0b25vbXkgPSBjaXR5TmFtZS5zZWFyY2goIuiHquayu+WMuiIpICE9IC0xOw0KICAgICAgaWYgKGlzQXV0b25vbXkpIHsNCiAgICAgICAgcmV0dXJuIGNpdHlOYW1lLnNlYXJjaCgi5YaFIikgIT0gLTENCiAgICAgICAgICA/IGNpdHlOYW1lLnN1YnN0cigwLCAzKQ0KICAgICAgICAgIDogY2l0eU5hbWUuc3Vic3RyKDAsIDIpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIGNpdHlOYW1lLm1hdGNoKC8oXFMqKSjnnIF85biCfOeJueWIq+ihjOaUv+WMuikvKQ0KICAgICAgICAgID8gY2l0eU5hbWUubWF0Y2goLyhcUyopKOecgXzluIJ854m55Yir6KGM5pS/5Yy6KS8pWzFdDQogICAgICAgICAgOiBjaXR5TmFtZTsNCiAgICAgIH0NCiAgICAgIC8vIGNvbnNvbGUubG9nKCdsaXN0MicsIHRoaXMubGlzdCkNCiAgICB9LA0KICAgIGNyZWF0ZU1ldGVvcnMoKSB7DQogICAgICBjb25zdCBtZXRlb3JDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWV0ZW9ycycpOw0KICAgICAgY29uc3QgbnVtYmVyT2ZNZXRlb3JzID0gMTAwOyAvLyDlop7liqDmtYHmmJ/mlbDph48NCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZNZXRlb3JzOyBpKyspIHsNCiAgICAgICAgY29uc3QgbWV0ZW9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgIG1ldGVvci5jbGFzc0xpc3QuYWRkKCdtZXRlb3InKTsNCg0KICAgICAgICAvLyDpmo/mnLrkvY3nva7lkozliqjnlLvlu7bov58NCiAgICAgICAgY29uc3Qgc3RhcnRQb3MgPSBNYXRoLnJhbmRvbSgpICogMTAwOw0KICAgICAgICBjb25zdCBkZWxheSA9IE1hdGgucmFuZG9tKCkgKiA1Ow0KICAgICAgICBjb25zdCBkdXJhdGlvbiA9IE1hdGgucmFuZG9tKCkgKiAzICsgMjsNCg0KICAgICAgICAvLyDpmo/mnLrpgInmi6nku47pobbpg6jmiJblt6bkvqflh7rnjrANCiAgICAgICAgaWYgKE1hdGgucmFuZG9tKCkgPCAwLjUpIHsNCiAgICAgICAgICBtZXRlb3Iuc3R5bGUudG9wID0gJy0nICsgTWF0aC5yYW5kb20oKSAqIDEwICsgJ3ZoJzsNCiAgICAgICAgICBtZXRlb3Iuc3R5bGUubGVmdCA9IHN0YXJ0UG9zICsgJ3Z3JzsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICBtZXRlb3Iuc3R5bGUudG9wID0gc3RhcnRQb3MgKyAndmgnOw0KICAgICAgICAgIG1ldGVvci5zdHlsZS5sZWZ0ID0gJy0nICsgTWF0aC5yYW5kb20oKSAqIDEwICsgJ3Z3JzsNCiAgICAgICAgfQ0KDQogICAgICAgIG1ldGVvci5zdHlsZS5hbmltYXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uICsgJ3MnOw0KICAgICAgICBtZXRlb3Iuc3R5bGUuYW5pbWF0aW9uRGVsYXkgPSBkZWxheSArICdzJzsNCiAgICAgICAgbWV0ZW9yQ29udGFpbmVyLmFwcGVuZENoaWxkKG1ldGVvcik7DQoNCiAgICAgIH0NCiAgICB9LA0KICB9DQp9Ow0K"},{"version":3,"sources":["App.vue"],"names":[],"mappingsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <audio id=\"background-music\" :src=\"require('@/../music/music.m4a')\" loop autoplay></audio>\r\n    <china-map :key=\"key\" cascade :echartsData=\"echartsData\" :scatterData=\"scatterData\" @mapClick=\"mapClick\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport chinaMap from \"./components/chinaMap.vue\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    chinaMap,\r\n  },\r\n  data() {\r\n    return {\r\n      key: 0,\r\n      testData: [\r\n        {\r\n          name: \"天津市\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"陕西省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"西安市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"四川省\",\r\n          value: 1,\r\n          tag: 0,\r\n        },\r\n        {\r\n          name: \"成都市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n        {\r\n          name: \"眉山市\",\r\n          value: 1,\r\n          tag: 1,\r\n        },\r\n      ],\r\n      scatterData: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.echartsData = this.testData.map(({ name, value, tag }) => {\r\n      return {\r\n        name: this.getCityName(name, tag),\r\n        value\r\n      }\r\n    })\r\n  },\r\n  mounted() {\r\n    this.createMeteors();\r\n  },\r\n  methods: {\r\n    mapClick({ code, name }) {\r\n      console.log(code, name);\r\n    },\r\n    /**\r\n     *@description 这个方法用来获取城市的简称，例如 北京市 => 北京。 内蒙古自治区 => 内蒙古\r\n    */\r\n    getCityName(cityName, tag) {\r\n      if (!cityName) return;\r\n      if (tag) {\r\n        return cityName;\r\n      }\r\n      let isAutonomy = cityName.search(\"自治区\") != -1;\r\n      if (isAutonomy) {\r\n        return cityName.search(\"内\") != -1\r\n          ? cityName.substr(0, 3)\r\n          : cityName.substr(0, 2);\r\n      } else {\r\n        return cityName.match(/(\\S*)(省|市|特别行政区)/)\r\n          ? cityName.match(/(\\S*)(省|市|特别行政区)/)[1]\r\n          : cityName;\r\n      }\r\n      // console.log('list2', this.list)\r\n    },\r\n    createMeteors() {\r\n      const meteorContainer = document.getElementById('meteors');\r\n      const numberOfMeteors = 100; // 增加流星数量\r\n      for (let i = 0; i < numberOfMeteors; i++) {\r\n        const meteor = document.createElement('div');\r\n        meteor.classList.add('meteor');\r\n\r\n        // 随机位置和动画延迟\r\n        const startPos = Math.random() * 100;\r\n        const delay = Math.random() * 5;\r\n        const duration = Math.random() * 3 + 2;\r\n\r\n        // 随机选择从顶部或左侧出现\r\n        if (Math.random() < 0.5) {\r\n          meteor.style.top = '-' + Math.random() * 10 + 'vh';\r\n          meteor.style.left = startPos + 'vw';\r\n        } else {\r\n          meteor.style.top = startPos + 'vh';\r\n          meteor.style.left = '-' + Math.random() * 10 + 'vw';\r\n        }\r\n\r\n        meteor.style.animationDuration = duration + 's';\r\n        meteor.style.animationDelay = delay + 's';\r\n        meteorContainer.appendChild(meteor);\r\n\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style>\r\n#app {\r\n  background-color: rgba(15, 30, 51, 0);\r\n}\r\n\r\n#meteors {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n  /* background-color: rgba(15, 30, 51, 1); */\r\n  background-image: url('../img/bg/bg.jpeg');\r\n  background-size: cover; /* 确保图片覆盖整个背景 */\r\n  background-position: center; /* 将背景图片居中 */\r\n  background-repeat: no-repeat; /* 禁止背景图片重复 */\r\n}\r\n\r\n.meteor {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 80px;\r\n  background: linear-gradient(45deg, rgb(249, 223, 254), rgba(242, 252, 191, 0.1));\r\n  animation: fall linear infinite;\r\n}\r\n\r\n@keyframes fall {\r\n  from {\r\n    transform: translateY(-100px) translateX(0) rotate(315deg);\r\n  }\r\n\r\n  to {\r\n    transform: translateY(110vh) translateX(100vw) rotate(315deg);\r\n  }\r\n}\r\n</style>\r\n"]}]}